"""Fix password length

Revision ID: ef558cbbdd46
Revises: 
Create Date: 2025-03-08 19:15:37.687565

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy import Column, Integer, String

# revision identifiers, used by Alembic.
revision: str = 'ef558cbbdd46'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    """
    upgrade():
    1) Удаляем внешний ключ movie_list_share_ibfk_1 из movie_list_share,
    2) Удаляем таблицу movie_list,
    3) Меняем длину поля password в таблице user (например, на 255).
    """

    # 1) Удаляем внешний ключ, чтобы можно было удалить movie_list
    # op.drop_constraint("movie_list_share_ibfk_2", "movie_list_share", type_="foreignkey")

    # 2) Удаляем таблицу movie_list
    # op.drop_table("movie_list")

    # 3) Меняем длину поля "password" в таблице "user" (например, с 50 на 255)
    # Предполагаем, что раньше было Column(String(50))
    # Пример:
    with op.batch_alter_table("user") as batch_op:
        batch_op.alter_column(
            "password",
            type_=sa.String(255),
            existing_type=sa.String(50),
            existing_nullable=True
        )


def downgrade():
    """
    downgrade():
    Здесь — код, сгенерированный автоматически (или вручную),
    который восстанавливает структуру таблиц и полей, если откатываем миграцию.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('watched_movie',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('movie_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('rating_value', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], name='watched_movie_ibfk_1'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='watched_movie_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_watched_movie_id', 'watched_movie', ['id'], unique=False)

    op.create_table('user',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('email', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('password', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=True)
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    op.create_index('ix_user_email', 'user', ['email'], unique=True)

    op.create_table('movie',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=True),
    sa.Column('description', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500), nullable=True),
    sa.Column('movie_list_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['movie_list_id'], ['movie_list.id'], name='movie_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_movie_title', 'movie', ['title'], unique=False)
    op.create_index('ix_movie_id', 'movie', ['id'], unique=False)

    op.create_table('movie_list_share',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('movie_list_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('friend_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('can_edit', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], name='movie_list_share_ibfk_2'),
    sa.ForeignKeyConstraint(['movie_list_id'], ['movie_list.id'], name='movie_list_share_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_movie_list_share_id', 'movie_list_share', ['id'], unique=False)

    op.create_table('movie_list',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='movie_list_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_movie_list_id', 'movie_list', ['id'], unique=False)

    op.create_table('rated_film',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('movie_list_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('movie_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=True),
    sa.Column('rating_value', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('watched', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movie.id'], name='rated_film_ibfk_3'),
    sa.ForeignKeyConstraint(['movie_list_id'], ['movie_list.id'], name='rated_film_ibfk_2'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='rated_film_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_rated_film_id', 'rated_film', ['id'], unique=False)

    op.create_table('revoked_token',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_revoked_token_token', 'revoked_token', ['token'], unique=True)
    op.create_index('ix_revoked_token_id', 'revoked_token', ['id'], unique=False)
    # ### end Alembic commands ###
